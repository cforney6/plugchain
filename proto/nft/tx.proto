syntax = "proto3";
package plugchain.nft;

import "gogoproto/gogo.proto";

option go_package = "github.com/oracleNetworkProtocol/plugchain/x/nft/types";

// Msg defines the Msg service.
service Msg {
    //IssueDenom defines a method for issue a denom
    rpc IssueDenom (MsgIssueDenom) returns (MsgIssueDenomResponse);
    //IssueNFT defines a method for Issue a new nft
    rpc IssueNFT (MsgIssueNFT) returns (MsgIssueNFTResponse);
    //EditNFT defines a method for edit a nft
    rpc EditNFT (MsgEditNFT) returns (MsgEditNFTResponse);
    //BurnNFT define a method for burning a nft
    rpc BurnNFT (MsgBurnNFT) returns (MsgBurnNFTResponse);
    //TransferNFT define a method for transferring a nft
    rpc TransferNFT (MsgTransferNFT) returns (MsgTransferNFTResponse);
    //TransferDenom define a method for transferring a denom
    rpc TransferDenom (MsgTransferDenom) returns (MsgTransferDenomResponse);
}


message MsgIssueDenom {
    option (gogoproto.equal) = true;
    string id = 1 [ (gogoproto.customname) = "ID" ];
    string name = 2;
    string schema = 3;
    string owner  = 4;
    string symbol =5;
    bool mint_restricted =6;
    bool edit_restricted = 7;
}

message MsgIssueDenomResponse{}

message MsgIssueNFT {
    option (gogoproto.equal) = true;

    string id = 1 [ (gogoproto.customname) = "ID" ];
    string denom_id = 2 [ (gogoproto.customname) = "DenomID" ];
    string name = 3;
    string url = 4 [ (gogoproto.customname) = "URL" ];;
    string data = 5;
    string owner = 6;
    string recipient = 7;
}

message MsgIssueNFTResponse{}


message MsgEditNFT {
    option (gogoproto.equal) = true;

    string id =1 [ (gogoproto.customname) = "ID" ];
    string denom_id = 2 [ (gogoproto.customname) = "DenomID" ];
    string name = 3;
    string URL = 4 [ (gogoproto.customname) = "URL" ];
    string data = 5;
    string owner = 6;
}
message MsgEditNFTResponse{}

message MsgBurnNFT{
    option (gogoproto.equal) = true;

    string id  = 1 [ (gogoproto.customname) = "ID" ];
    string denom_id = 2 [ (gogoproto.customname) = "DenomID" ];
    string owner = 3;
}

message MsgBurnNFTResponse{}

message MsgTransferNFT {
    option (gogoproto.equal) = true;
    string id = 1 [ (gogoproto.customname) = "ID" ];
    string denom_id = 2 [ (gogoproto.customname) = "DenomID" ];
    string recipient = 3;
    string owner = 4;

}

message MsgTransferNFTResponse{}

message MsgTransferDenom {
    option (gogoproto.equal) = true;
    string id = 1 [ (gogoproto.customname) = "ID" ];
    string owner = 2;
    string recipient = 3;
}

message MsgTransferDenomResponse{}