(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{492:function(t,e,a){"use strict";a.r(e);var s=a(57),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"join-the-testnet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#join-the-testnet"}},[t._v("#")]),t._v(" Join The Testnet")]),t._v(" "),a("p",[t._v("testnet is activity")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/get-started/install.html"}},[t._v("isntall plug")])],1)]),t._v(" "),a("h2",{attrs:{id:"public-endpoints"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#public-endpoints"}},[t._v("#")]),t._v(" Public Endpoints")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:""}},[t._v("GRPC:8.210.180.240:9090")])]),t._v(" "),a("li",[a("a",{attrs:{href:"http://8.210.180.240:26657/",target:"_blank",rel:"noopener noreferrer"}},[t._v("RPC:http://8.210.180.240:26657/"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://8.210.180.240:1317/",target:"_blank",rel:"noopener noreferrer"}},[t._v("REST:http://8.210.180.240:1317/"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"run-a-full-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-a-full-node"}},[t._v("#")]),t._v(" Run a Full Node")]),t._v(" "),a("h3",{attrs:{id:"start-node-from-genesis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#start-node-from-genesis"}},[t._v("#")]),t._v(" Start node from genesis")]),t._v(" "),a("ol",[a("li",[t._v("Initialize the node")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("plugchaind init "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("moniker"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --chain-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("plugchain_521-1\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Download genesis.json and seed information disclosed on the testnet or enter the cloned Plug Chain directory:")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -o ~/.plugchain/config/genesis.json https://raw.githubusercontent.com/oracleNetworkProtocol/plugchain/main/testnet/latest/genesis.json\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("The following third step can be skipped, if skipping, you need to add the parameter "),a("code",[t._v("--p2p.seeds")]),t._v(" parameter to the fourth step)")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("After overwriting genesis.json in the data directory, modify the seeds parameter in ~/.plugchain/config/config.toml and add seed information")])]),t._v(" "),a("p",[t._v("Modify the seeds provided in the ./testnet/latest/seeds.txt file and modify the "),a("code",[t._v("seeds")]),t._v(" parameter in ~/.plugchain/config/config.toml to set the seed nodes of the link. The seed information is separated by English commas")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("Start the node service")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Start the node (you can also use nohup or systemd to run in the background)")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The third step does not modify the seed information. When running start, add the parameter ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# --p2p.seeds="5f81625b69d192d3ef5bf47b83484326e0546491@47.100.161.102:26656"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If you modify the service port configuration, you need to add parameters where the service is used:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# For example, modify the default tendermint rpc service: tcp://localhost:26657 => tcp://localhost:5000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# When using cli, commands with the `--node` parameter need to point to this parameter as --node=tcp://localhost:5000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# For example: plugchaind q account gx1tulwx2hwz4dv8te6cflhda64dn0984harlzegw --node tcp://localhost:5000")]),t._v("\n\n\nplugchaind start\n")])])]),a("h2",{attrs:{id:"faucet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#faucet"}},[t._v("#")]),t._v(" Faucet")]),t._v(" "),a("p",[t._v("welcome to get coin form "),a("a",{attrs:{href:"http://test.plugchain.network/wallet/receive",target:"_blank",rel:"noopener noreferrer"}},[t._v("test explorers"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"explorers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#explorers"}},[t._v("#")]),t._v(" Explorers")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://test.plugchain.network/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://test.plugchain.network/"),a("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);