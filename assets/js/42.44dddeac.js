(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{471:function(t,e,a){"use strict";a.r(e);var s=a(57),l=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"grpc-gateway-json-rest"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grpc-gateway-json-rest"}},[t._v("#")]),t._v(" gRPC Gateway JSON REST")]),t._v(" "),a("h2",{attrs:{id:"query-api-port-activation-and-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#query-api-port-activation-and-configuration"}},[t._v("#")]),t._v(" Query API Port, Activation and Configuration")]),t._v(" "),a("p",[t._v("All routes are configured under the following fields in "),a("code",[t._v("~/.plugchain/config/app.toml")]),t._v(":")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("api.enable = true|false")]),t._v(" field defines if the REST server should be enabled. Defaults to "),a("code",[t._v("false")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("api.address = {string}")]),t._v(" field defines the address (really, the port, since the host should be kept at "),a("code",[t._v("0.0.0.0")]),t._v(") the server should bind to. Defaults to "),a("code",[t._v("tcp://0.0.0.0:1317")]),t._v(".")]),t._v(" "),a("li",[t._v("some additional API configuration options are defined in "),a("code",[t._v("~/.plugchain/config/app.toml")]),t._v(", along with comments, please refer to that file directly.")])]),t._v(" "),a("h3",{attrs:{id:"grpc-gateway-rest-routes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grpc-gateway-rest-routes"}},[t._v("#")]),t._v(" gRPC-gateway REST Routes")]),t._v(" "),a("p",[t._v("If, for various reasons, you cannot use gRPC (for example, you are building a web application, and browsers don't support HTTP2 on which gRPC is built), then the Plug Chain Hub offers REST routes via gRPC-gateway.")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://grpc-ecosystem.github.io/grpc-gateway/",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC-gateway"),a("OutboundLink")],1),t._v(" is a tool to expose gRPC endpoints as REST endpoints. For each RPC endpoint defined in a Protobuf service, the SDK offers a REST equivalent.")]),t._v(" "),a("p",[t._v("For application developers, gRPC-gateway REST routes needs to be wired up to the REST server, this is done by calling the "),a("code",[t._v("RegisterGRPCGatewayRoutes")]),t._v(" function on the ModuleManager.")]),t._v(" "),a("h3",{attrs:{id:"swagger"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swagger"}},[t._v("#")]),t._v(" Swagger")]),t._v(" "),a("p",[t._v("A "),a("a",{attrs:{href:"https://swagger.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Swagger"),a("OutboundLink")],1),t._v(" (or OpenAPIv2) specification file is exposed under the "),a("code",[t._v("/swagger")]),t._v(" route on the API server. Swagger is an open specification describing the API endpoints a server serves, including description, input arguments, return types and much more about each endpoint.")]),t._v(" "),a("p",[t._v("Enabling the "),a("code",[t._v("/swagger")]),t._v(" endpoint is configurable inside "),a("code",[t._v("~/.plugchain/config/app.toml")]),t._v(" via the "),a("code",[t._v("api.swagger")]),t._v(" field, which is set to "),a("code",[t._v("false")]),t._v(" by default.")]),t._v(" "),a("p",[t._v("For application developers, you may want to generate your own Swagger definitions based on your custom modules. The Plug Chain Hub's "),a("a",{attrs:{href:"https://github.com/oracleNetworkProtocol/plugchain/blob/main/testnet/scripts/protoc-swagger-gen.sh",target:"_blank",rel:"noopener noreferrer"}},[t._v("Swagger generation script"),a("OutboundLink")],1),t._v(" is a good place to start.")]),t._v(" "),a("h2",{attrs:{id:"api-endpoints"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-endpoints"}},[t._v("#")]),t._v(" API Endpoints")]),t._v(" "),a("p",[a("strong",[t._v("Plug Chain Hub API Endpoints")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("API Endpoints")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Legacy REST Endpoint")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/auth/v1beta1/accounts/{address}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Return account details based on address")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/auth/accounts/{address}")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/auth/v1beta1/params")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query all parameters")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/bank/v1beta1/balances/{address}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the balance of all coins for a single account")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/bank/balances/{address}")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/bank/v1beta1/balances/{address}/{denom}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the balance of a single coin for a single account")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/bank/v1beta1/denoms_metadata")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the client metadata for all registered coin denominations")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/bank/v1beta1/denoms_metadata/{denom}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the client metadata of a given coin denomination")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/bank/v1beta1/params")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the parameters of bank module")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/bank/v1beta1/supply")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the total supply of all coins")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/bank/total")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/bank/v1beta1/supply/{denom}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the supply of a single coin")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/bank/total/{denom}")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/distribution/v1beta1/community_pool")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the community pool coins")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/distribution/community_pool")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the total rewards accrued by each validator")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/distribution/delegators/{delegatorAddr}/rewards")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the total rewards accrued by a delegation")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/distribution/delegators/{delegatorAddr}/rewards/{validatorAddr}")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/distribution/v1beta1/delegators/{delegator_address}/validators")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the validators of a delegator")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query withdraw address of a delegator")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/distribution/delegators/{delegatorAddr}/withdraw_address")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/distribution/v1beta1/params")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query params of the distribution module")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/distribution/parameters")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/distribution/v1beta1/validators/{validator_address}/commission")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query accumulated commission for a validator")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query rewards of a validator address")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/distribution/validators/{validatorAddr}/outstanding_rewards")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/distribution/v1beta1/validators/{validator_address}/slashes")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query slash events of a validator")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/evidence/v1beta1/evidence")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query all evidence")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/evidence/v1beta1/evidence/{evidence_hash}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query evidence based on evidence hash")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/gov/v1beta1/params/{params_type}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query all parameters of the gov module")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/gov/parameters/{params_type}")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/gov/v1beta1/proposals")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query all proposals based on given status")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/gov/proposals")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/gov/v1beta1/proposals/{proposal_id}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query proposal details based on ProposalID")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/gov/proposals/{proposal-id}")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query all deposits of a single proposal")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/gov/proposals/{proposal-id}/deposits")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query single deposit information based proposalID, depositAddr")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/gov/proposals/{proposal-id}/deposits/{depositor}")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/gov/v1beta1/proposals/{proposal_id}/tally")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the tally of a proposal vote")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/gov/proposals/{proposal-id}/tally")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/gov/v1beta1/proposals/{proposal_id}/votes")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query votes of a given proposal")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/gov/proposals/{proposal-id}/votes")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query voted information based on proposalID, voterAddr")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/gov/proposals/{proposal-id}/votes/{voter}")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/params/v1beta1/params")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query a specific parameter of a module, given its subspace and key")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/slashing/v1beta1/params")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the parameters of slashing module")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/slashing/parameters")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/slashing/v1beta1/signing_infos")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query signing info of all validators")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/slashing/signing_infos")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/slashing/v1beta1/signing_infos/{cons_address}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the signing info of given cons address")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/staking/v1beta1/delegations/{delegator_addr}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query all delegations of a given delegator address")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/staking/delegators/{delegatorAddr}/delegations")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query redelegations of given address")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/staking/redelegations")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query all unbonding delegations of a given delegator address")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/staking/delegators/{delegatorAddr}/unbonding_delegations")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query all validators info for given delegator address")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/staking/delegators/{delegatorAddr}/validators")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query validator info for given delegator validator pair")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/staking/delegators/{delegatorAddr}/validators/{validatorAddr}")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/staking/v1beta1/historical_info/{height}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the historical info for given height")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/staking/v1beta1/params")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the staking parameters")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/staking/parameters")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/staking/v1beta1/pool")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the pool info")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/staking/pool")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/staking/v1beta1/validators")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query all validators that match the given status")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/staking/validators")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/staking/v1beta1/validators/{validator_addr}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query validator info for given validator address")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/staking/validators/{validatorAddr}")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/staking/v1beta1/validators/{validator_addr}/delegations")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query delegate info for given validator")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/staking/validators/{validatorAddr}/delegations")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query delegate info for given validator delegator pair")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/staking/delegators/{delegatorAddr}/delegations/{validatorAddr}")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query unbonding info for given validator delegator pair")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/staking/delegators/{delegatorAddr}/unbonding_delegations/{validatorAddr}")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query unbonding delegations of a validator")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/staking/validators/{validatorAddr}/unbonding_delegations")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/upgrade/v1beta1/applied_plan/{name}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query a previously applied upgrade plan by its name")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/upgrade/v1beta1/current_plan")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the current upgrade plan")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the consensus state that will serve as a trusted kernel for the next version of this chain")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/channel/v1beta1/channels")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query all the IBC channels of a chain")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/channel/v1beta1/channels/{channel_id}/ports/{port_id}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query an IBC channel")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/channel/v1beta1/channels/{channel_id}/ports/{port_id}/client_state")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query for the client state for the channel associated with the provided channel identifiers")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/channel/v1beta1/channels/{channel_id}/ports/{port_id}/consensus_state/revision/{revision_number}/height/{revision_height}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query for the consensus state for the channel associated with the provided channel identifiers")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/channel/v1beta1/channels/{channel_id}/ports/{port_id}/next_sequence")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Return the next receive sequence for a given channel")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/channel/v1beta1/channels/{channel_id}/ports/{port_id}/packet_acknowledgements")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Return all the packet acknowledgements associated with a channel")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/channel/v1beta1/channels/{channel_id}/ports/{port_id}/packet_acks/{sequence}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query a stored packet acknowledgement hash")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/channel/v1beta1/channels/{channel_id}/ports/{port_id}/packet_commitments")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Return all the packet commitments hashes associated with a channel")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/channel/v1beta1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_ack_sequences}/unreceived_acks")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Return all the unreceived IBC acknowledgements associated with a channel and sequences")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/channel/v1beta1/channels/{channel_id}/ports/{port_id}/packet_commitments/{packet_commitment_sequences}/unreceived_packets")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Return all the unreceived IBC packets associated with a channel and sequences")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/channel/v1beta1/channels/{channel_id}/ports/{port_id}/packet_commitments/{sequence}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query a stored packet commitment hash")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/channel/v1beta1/channels/{channel_id}/ports/{port_id}/packet_receipts/{sequence}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query if a given packet sequence has been received on the Queryd chain")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/channel/v1beta1/connections/{connection}/channels")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query all the channels associated with a connection end")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/client/v1beta1/params")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query all parameters of the ibc client")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/client/v1beta1/client_states")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query all the IBC light clients of a chain")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/client/v1beta1/client_states/{client_id}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query an IBC light client")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/client/v1beta1/consensus_states/{client_id}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query all the consensus state associated with a given client")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/client/v1beta1/consensus_states/{client_id}/revision/{revision_number}/height/{revision_height}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query a consensus state associated with a client state at a given height")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/connection/v1beta1/client_connections/{client_id}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the connection paths associated with a client state")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/connection/v1beta1/connections")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query all the IBC connections of a chain")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/connection/v1beta1/connections/{connection_id}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query an IBC connection end")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/connection/v1beta1/connections/{connection_id}/client_state")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the client state associated with the connection")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/core/connection/v1beta1/connections/{connection_id}/consensus_state/revision/{revision_number}/height/{revision_height}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the consensus state associated with the connection")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/applications/transfer/v1beta1/denom_traces")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query all denomination traces")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/applications/transfer/v1beta1/denom_traces/{hash}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query a denomination trace information")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/ibc/applications/transfer/v1beta1/params")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query all parameters of the ibc-transfer module")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})])])]),t._v(" "),a("p",[a("strong",[t._v("Tendermint API Endpoints")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("API Endpoints")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Legacy REST Endpoint")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/base/tendermint/v1beta1/blocks/latest")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Return the latest block.")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/blocks/latest")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/base/tendermint/v1beta1/blocks/{height}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query block for given height.")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/blocks/{height}")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/base/tendermint/v1beta1/node_info")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query the current node info.")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/node_info")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/base/tendermint/v1beta1/syncing")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query node syncing.")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/syncing")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/base/tendermint/v1beta1/validatorsets/latest")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query latest validator-set.")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/validatorsets/latest")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/base/tendermint/v1beta1/validatorsets/{height}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Query validator-set at a given height.")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/validatorsets/{height}")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("POST")]),t._v(" "),a("code",[t._v("/cosmos/tx/v1beta1/simulate")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Simulate executing a transaction for estimating gas usage.")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/tx/v1beta1/txs")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Fetch txs by event.")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/txs")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("POST")]),t._v(" "),a("code",[t._v("/cosmos/tx/v1beta1/txs")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Broadcast transaction.")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("POST")]),t._v(" "),a("code",[t._v("/txs")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/cosmos/tx/v1beta1/txs/{hash}")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Fetch a tx by hash.")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("GET")]),t._v(" "),a("code",[t._v("/txs/{hash}")])])])])]),t._v(" "),a("h2",{attrs:{id:"generating-and-signing-transactions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#generating-and-signing-transactions"}},[t._v("#")]),t._v(" Generating and Signing Transactions")]),t._v(" "),a("p",[t._v("It is not possible to generate or sign a transaction using REST, only to broadcast one. You can generating and signing transactions using "),a("RouterLink",{attrs:{to:"/endpoints/grpc-client.html"}},[t._v("gRPC Client")]),t._v(".")],1),t._v(" "),a("h2",{attrs:{id:"broadcasting-transactions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#broadcasting-transactions"}},[t._v("#")]),t._v(" Broadcasting Transactions")]),t._v(" "),a("p",[t._v("Broadcasting a transaction using the gRPC-gateway REST endpoint "),a("code",[t._v("cosmos/tx/v1beta1/txs")]),t._v(" can be done by sending a POST request as follows, where the "),a("code",[t._v("NewTxBytes")]),t._v(" are the protobuf-encoded bytes of a signed transaction:")]),t._v(" "),a("div",{staticClass:"language-golang extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('import (\n    "fmt"\n    "encoding/base64"\n)\n\nfunc sendTx() error {\n    //--snip--\n    // base64 encode the encoded tx bytes\n    //txBytes is obtained by  `encCfg.TxConfig.TxEncoder()(txBuilder.GetTx())` or `encCfg.TxConfig.TxJSONEncoder()(txBuilder.GetTx())`\n    NewTxBytes := base64.StdEncoding.EncodeToString(txBytes)\n    fmt.Println(NewTxBytes)\n}\n')])])]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -X POST "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -H "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type: application/json"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -d"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"tx_bytes":"{{NewTxBytes}}","mode":"BROADCAST_MODE_SYNC"}\'')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost:1317/cosmos/tx/v1beta1/txs"')]),t._v("\n")])])]),a("h2",{attrs:{id:"querying-transactions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#querying-transactions"}},[t._v("#")]),t._v(" Querying Transactions")]),t._v(" "),a("p",[t._v("Querying transactions using the gRPC-gateway REST endpoint can be done by sending a GET request as follows:")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Query tx by hash:")]),t._v(" "),a("code",[t._v("/cosmos/tx/v1beta1/txs/{hash}")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -X GET "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -H "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"accept: application/json"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:1317/cosmos/tx/v1beta1/txs/{hash}"')]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Query tx by events:")]),t._v(" "),a("code",[t._v("/cosmos/tx/v1beta1/txs")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -X GET "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    -H "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"accept: application/json"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:1317/cosmos/tx/v1beta1/txs?events={event_content}"')]),t._v("\n")])])])])])])}),[],!1,null,null,null);e.default=l.exports}}]);