(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{498:function(t,e,_){"use strict";_.r(e);var a=_(57),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"plug-chain-hub-monitor"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#plug-chain-hub-monitor"}},[t._v("#")]),t._v(" Plug Chain Hub Monitor")]),t._v(" "),_("h2",{attrs:{id:"introduction"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),_("p",[t._v("Plug Chain Hub can report and serve the Prometheus metrics, which can be consumed by Prometheus collector(s).")]),t._v(" "),_("p",[t._v("This functionality is disabled by default.")]),t._v(" "),_("p",[t._v("To enable the Prometheus metrics, set "),_("code",[t._v("prometheus = true")]),t._v(" in your config file(config.toml). Metrics will be served under /metrics on 26660 port by default. This port can be changed in the config file ("),_("code",[t._v('prometheus_listen_addr = ":26660"')]),t._v(").")]),t._v(" "),_("h2",{attrs:{id:"metrics"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#metrics"}},[t._v("#")]),t._v(" Metrics")]),t._v(" "),_("p",[t._v("Application metrics, namespace: "),_("code",[t._v("plugchaind")])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[_("strong",[t._v("Name")])]),t._v(" "),_("th",[_("strong",[t._v("Type")])]),t._v(" "),_("th",[_("strong",[t._v("Tags")])]),t._v(" "),_("th",[_("strong",[t._v("Description")])])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("module_stake_bonded_token")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td",[t._v("validator_address")]),t._v(" "),_("td",[t._v("Total bonded token by validator")])]),t._v(" "),_("tr",[_("td",[t._v("module_stake_loosen_token")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Total loose tokens")])]),t._v(" "),_("tr",[_("td",[t._v("module_stake_burned_token")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Total burned token")])]),t._v(" "),_("tr",[_("td",[t._v("module_stake_slashed_token")]),t._v(" "),_("td",[t._v("Counter")]),t._v(" "),_("td",[t._v("validator_address")]),t._v(" "),_("td",[t._v("Total slashed token by validator")])]),t._v(" "),_("tr",[_("td",[t._v("module_stake_jailed")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td",[t._v("validator_address")]),t._v(" "),_("td",[t._v("Jailed status by validator, either 0 (not jailed) or 1 (jailed)")])]),t._v(" "),_("tr",[_("td",[t._v("module_stake_power")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td",[t._v("validator_address")]),t._v(" "),_("td",[t._v("Voting power by validator")])]),t._v(" "),_("tr",[_("td",[t._v("module_upgrade_upgrade")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Whether new software needs to be installed, either 0 (no) or 1 (yes)")])]),t._v(" "),_("tr",[_("td",[t._v("module_upgrade_signal")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td",[t._v("validator_address, version")]),t._v(" "),_("td",[t._v("Whether validator have run the new version software, either 0 (no) or 1 (yes)")])]),t._v(" "),_("tr",[_("td",[t._v("module_service_active_requests")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Number of active requests")])]),t._v(" "),_("tr",[_("td",[t._v("module_gov_parameter")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td",[t._v("parameter_key")]),t._v(" "),_("td",[t._v("Parameter of governance")])]),t._v(" "),_("tr",[_("td",[t._v("module_gov_proposal_status")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td",[t._v("proposal_id")]),t._v(" "),_("td",[t._v("Status of proposal, 0:DepositPeriod 1:VotingPeriod 2:Pass 3:Reject 4:Other")])]),t._v(" "),_("tr",[_("td",[t._v("module_gov_vote")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td",[t._v("proposal_id, validator_address")]),t._v(" "),_("td",[t._v("Validator vote result of a proposal, 0:Yes 1:No 2:NoWithVeto 3:Abstain")])]),t._v(" "),_("tr",[_("td",[t._v("module_distribution_community_tax")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td",[t._v("height")]),t._v(" "),_("td",[t._v("Community tax accumulation")])]),t._v(" "),_("tr",[_("td",[t._v("v0_invariant_failure")]),t._v(" "),_("td",[t._v("Counter")]),t._v(" "),_("td",[t._v("error")]),t._v(" "),_("td",[t._v("Invariant failure stats")])])])]),t._v(" "),_("p",[t._v("Consensus metrics, namespace: "),_("code",[t._v("tendermint")])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[_("strong",[t._v("Name")])]),t._v(" "),_("th",[_("strong",[t._v("Type")])]),t._v(" "),_("th",[_("strong",[t._v("Tags")])]),t._v(" "),_("th",[_("strong",[t._v("Description")])])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("consensus_height")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Height of the chain")])]),t._v(" "),_("tr",[_("td",[t._v("consensus_failure")]),t._v(" "),_("td",[t._v("Counter")]),t._v(" "),_("td",[t._v("height")]),t._v(" "),_("td",[t._v("Consensus failure")])]),t._v(" "),_("tr",[_("td",[t._v("consensus_validators")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Number of validators")])]),t._v(" "),_("tr",[_("td",[t._v("consensus_validators_power")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Total voting power of all validators")])]),t._v(" "),_("tr",[_("td",[t._v("consensus_missing_validators")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Number of validators who did not sign")])]),t._v(" "),_("tr",[_("td",[t._v("consensus_missing_validators_power")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Total voting power of the missing validators")])]),t._v(" "),_("tr",[_("td",[t._v("consensus_byzantine_validators")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Number of validators who tried to double sign")])]),t._v(" "),_("tr",[_("td",[t._v("consensus_byzantine_validators_power")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Total voting power of the byzantine validators")])]),t._v(" "),_("tr",[_("td",[t._v("consensus_block_interval_seconds")]),t._v(" "),_("td",[t._v("Histogram")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Time between this and last block (Block.Header.Time) in seconds")])]),t._v(" "),_("tr",[_("td",[t._v("consensus_rounds")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Number of rounds")])]),t._v(" "),_("tr",[_("td",[t._v("consensus_num_txs")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Number of transactions")])]),t._v(" "),_("tr",[_("td",[t._v("consensus_block_parts")]),t._v(" "),_("td",[t._v("Counter")]),t._v(" "),_("td",[t._v("peer_id")]),t._v(" "),_("td",[t._v("Number of blockparts transmitted by peer")])]),t._v(" "),_("tr",[_("td",[t._v("consensus_latest_block_height")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("/status sync_info number")])]),t._v(" "),_("tr",[_("td",[t._v("consensus_fast_syncing")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Either 0 (not fast syncing) or 1 (syncing)")])]),t._v(" "),_("tr",[_("td",[t._v("consensus_total_txs")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Total number of transactions committed")])]),t._v(" "),_("tr",[_("td",[t._v("consensus_block_size_bytes")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Block size in bytes")])]),t._v(" "),_("tr",[_("td",[t._v("p2p_peers")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Number of peers node's connected to")])]),t._v(" "),_("tr",[_("td",[t._v("p2p_peer_receive_bytes_total")]),t._v(" "),_("td",[t._v("Counter")]),t._v(" "),_("td",[t._v("peer_id")]),t._v(" "),_("td",[t._v("Number of bytes received from a given peer")])]),t._v(" "),_("tr",[_("td",[t._v("p2p_peer_send_bytes_total")]),t._v(" "),_("td",[t._v("Counter")]),t._v(" "),_("td",[t._v("peer_id")]),t._v(" "),_("td",[t._v("Number of bytes sent to a given peer")])]),t._v(" "),_("tr",[_("td",[t._v("p2p_peer_pending_send_bytes")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td",[t._v("peer_id")]),t._v(" "),_("td",[t._v("Number of pending bytes to be sent to a given peer")])]),t._v(" "),_("tr",[_("td",[t._v("p2p_num_txs")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td",[t._v("peer_id")]),t._v(" "),_("td",[t._v("Number of transactions submitted by each peer_id")])]),t._v(" "),_("tr",[_("td",[t._v("mempool_size")]),t._v(" "),_("td",[t._v("Gauge")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Number of uncommitted transactions")])]),t._v(" "),_("tr",[_("td",[t._v("mempool_tx_size_bytes")]),t._v(" "),_("td",[t._v("Histogram")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Transaction sizes in bytes")])]),t._v(" "),_("tr",[_("td",[t._v("mempool_failed_txs")]),t._v(" "),_("td",[t._v("Counter")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Number of failed transactions")])]),t._v(" "),_("tr",[_("td",[t._v("mempool_recheck_times")]),t._v(" "),_("td",[t._v("Counter")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Number of transactions rechecked in the mempool")])]),t._v(" "),_("tr",[_("td",[t._v("state_block_processing_time")]),t._v(" "),_("td",[t._v("Histogram")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Time between BeginBlock and EndBlock in ms")])]),t._v(" "),_("tr",[_("td",[t._v("state_recheck_time")]),t._v(" "),_("td",[t._v("Histogram")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("Time cost on recheck in ms")])]),t._v(" "),_("tr",[_("td",[t._v("state_app_hash_conflict")]),t._v(" "),_("td",[t._v("Counter")]),t._v(" "),_("td",[t._v("proposer, height")]),t._v(" "),_("td",[t._v("App hash conflict error")])])])]),t._v(" "),_("p",[t._v("Plug Chain Hub metrics also contains tendermint metrics, Visit [tendermint metrics](https://github.com/Plug Chain/tendermint/blob/Plug Chain/master/docs/tendermint-core/metrics.md) for more information.")]),t._v(" "),_("h2",{attrs:{id:"start-monitor"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#start-monitor"}},[t._v("#")]),t._v(" Start Monitor")]),t._v(" "),_("p",[t._v("This is an example for getting started with the Plug Chain Hub Monitor by using docker.")]),t._v(" "),_("h3",{attrs:{id:"edit-prometheus-config-file"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#edit-prometheus-config-file"}},[t._v("#")]),t._v(" Edit Prometheus config file")]),t._v(" "),_("p",[t._v("You can download the example "),_("a",{attrs:{href:"https://raw.githubusercontent.com/prometheus/prometheus/master/documentation/examples/prometheus.yml",target:"_blank",rel:"noopener noreferrer"}},[t._v("prometheus.yml"),_("OutboundLink")],1),t._v("  to the "),_("code",[t._v("~/volumes/prometheus/")]),t._v(" and add a job under the "),_("code",[t._v("scrape_configs")]),t._v(" of the "),_("code",[t._v("prometheus.yml")]),t._v(":")]),t._v(" "),_("div",{staticClass:"language-yaml extra-class"},[_("pre",{pre:!0,attrs:{class:"language-yaml"}},[_("code",[t._v("      "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("job_name")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Plug Chain Hub\n          "),_("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("static_configs")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targets")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),_("span",{pre:!0,attrs:{class:"token string"}},[t._v("'localhost:26660'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),_("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("labels")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),_("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("instance")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myvalidator\n")])])]),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),_("p",[t._v("The value of targets is the "),_("code",[t._v("prometheus_listen_addr")]),t._v(" in your "),_("code",[t._v("config.toml")])])]),t._v(" "),_("h3",{attrs:{id:"start-prometheus"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#start-prometheus"}},[t._v("#")]),t._v(" Start Prometheus")]),t._v(" "),_("div",{staticClass:"language-bash extra-class"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[_("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run -d --name"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("prometheus -p "),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("9090")]),t._v(":9090 -v ~/volumes/prometheus:/etc/prometheus prom/prometheus\n")])])]),_("p",[t._v("You should be able to browse to a status page about prometheus at "),_("a",{attrs:{href:"http://localhost:9090",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:9090"),_("OutboundLink")],1)]),t._v(" "),_("h3",{attrs:{id:"start-grafana"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#start-grafana"}},[t._v("#")]),t._v(" Start Grafana")]),t._v(" "),_("div",{staticClass:"language-bash extra-class"},[_("pre",{pre:!0,attrs:{class:"language-bash"}},[_("code",[_("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run -d --name"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("grafana -p "),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v(":3000 grafana/grafana\n")])])]),_("p",[t._v("You can visit "),_("a",{attrs:{href:"http://localhost:3000/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:3000/"),_("OutboundLink")],1),t._v(" to open grafana and create your own dashboard.")]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),_("p",[t._v("The default username and password are both admin. We strongly recommend immediately changing your username & password after login.")]),t._v(" "),_("p",[t._v("A Grafana dashboard compatible with all the cosmos-sdk and tendermint based blockchains: "),_("a",{attrs:{href:"https://github.com/zhangyelong/cosmos-dashboard",target:"_blank",rel:"noopener noreferrer"}},[t._v("cosmos-dashboard"),_("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=s.exports}}]);